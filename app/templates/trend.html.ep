% layout 'main';

<style>
#chart { height: 500px; }
</style>

<div class="panel-group">
   <div class="panel panel-default">

      <div class="panel panel-primary">
         <div class="panel-heading">
            <h3 class="panel-title">
               <a data-toggle="collapse" href="#collapseOne">
                  <span class="glyphicon glyphicon-chevron-down"></span>
                  Graph
               </a>
            </h3>
         </div> <!-- panel-heading -->
         <div id="collapseOne" class="panel-collapse collapse in">
            <div class="panel-body">
               <div id="chart" class="with-3d-shadow with-transitions">
                     <svg></svg>
               </div>
            </div> <!-- panel-body -->
         </div> <!-- collapseOne -->
      </div> <! -- panal-#class -->

      <div class="panel panel-primary">
         <div class="panel-heading">
            <h3 class="panel-title">
               <a data-toggle="collapse" href="#collapseTwo">
                  <span class="glyphicon glyphicon-chevron-down"></span>
                  Statistics
               </a>
            </h3>
         </div> <!-- panel-heading -->
         <div id="collapseTwo" class="panel-collapse collapse out">
            <div class="panel-body">
               <table class="table">
                  <thead>
                     <tr>
                        <th>Promises</th>
                        <th>Value</th>
                     </tr>
                  </thead>
               % for my $key ( sort keys %$promise_stats ) {
                     <tr>
                        <td> <%= $key %> </td>
                        <td> <%= $promise_stats->{$key} %> </td>
                     </tr>
               % }
                  <thead>
                     <tr>
                        <th>Hosts</th>
                        <th>Value</th>
                     </tr>
                  </thead>
                  <tbody>
               % for my $key ( sort keys %$hosts_stats ) {
                     <tr>
                        <td> <%= $key %> </td>
                        <td> <%= $hosts_stats->{$key} %> </td>
                     </tr>
               % }
                  </tbody>
               </table>
            </div> <!-- panel-body -->
         </div> <!-- collapseTwo -->
      </div> <!-- panal-#class -->

      <div class="panel panel-primary">
         <div class="panel-heading">
            <h3 class="panel-title">
               <a data-toggle="collapse" href="#collapseThree">
                  <span class="glyphicon glyphicon-chevron-down"></span>
                  Raw data
               </a>
            </h3>
         </div> <!-- panel-heading -->
         <div id="collapseThree" class="panel-collapse collapse out">
            <div class="panel-body">
               %= include 'table'
            </div> <!-- panel-body -->
         </div> <!-- collapseThree -->
      </div> <!-- panal-#class -->

      <div class="panel panel-primary">
         <div class="panel-heading">
            <h3 class="panel-title">
               <a data-toggle="collapse" href="#collapseFour">
                  <span class="glyphicon glyphicon-chevron-down"></span>
                  <span class="glyphicon glyphicon-question-sign"></span>
                  Explanation of this graph.
               </a>
            </h3>
         </div> <!-- panel-heading -->
         <div id="collapseFour" class="panel-collapse collapse out">
            <div class="panel-body">

                  <p>This graph shows two scatter plots and a trend line for each. The plots are for the total count of promises, including repeats, for each day, either kept, repaired, or unkept, depending on what you selected, and the total number of CFEngine agent hosts at the same time.</p>

                  <p>The trends can reveal interesting things. Is the count of promises repaired rising along with hosts? How many hosts will you have sixty days from now? How many promises will not be kept thirty days from now?</p>

            </div> <!-- panel-body -->
         </div> <!-- collapseFour -->
      </div> <!-- panal-#class -->

   </div> <!-- panel-default -->
</div> <!-- panel-group -->

<script type="text/javascript">
var dr_data = <%== $dr_data %>;

nv.addGraph(function() {
   var chart = nv.models.scatterPlusLineChart()

   var project_days   = 60*60*1440; // Project graph (x axis) 60 future days.
   var project_counts = 2; // Increase y axis by this factor for projections.

   chart.margin(
      {top: 30},
      {right: 50},
      {left: 70},
      {bottom: 50}
   );
   chart.color(d3.scale.category10().range());

   // Get maximum x and y from all series.
   var dr_dataMax = dr_data.reduce(function(memo, series) {
       return series.values.reduce(function(m, v) {
           m.x = Math.max(m.x, v.x);
           m.y = Math.max(m.y, v.y);
           return m;
       }, memo);
   }, {x: Number.MIN_VALUE, y: Number.MIN_VALUE});
   
   // Expand axis to future for visual trending.
   var future_date = dr_dataMax.x + project_days;
   var top_count   = parseInt( dr_dataMax.y * project_counts );
   chart.forceX([ future_date ]);
   chart.forceY([ top_count ]);
   
   chart.scatter.onlyCircles(false);
   chart.tooltipContent(function(key) {
      return '<h2>' + key + '</h2>';
   });

   chart.xAxis
      .ticks(10)
      .staggerLabels(true)
      .tickFormat(function(d) {
         return d3.time.format('%Y-%m-%d')(new Date(d*1000));
   })
   ;

   chart.yAxis
      .ticks(10)
      .axisLabel("Count")
      .tickFormat(d3.format("d"))
   ;

   d3.select("#chart svg")
      .datum(dr_data)
      .call(chart);

   nv.utils.windowResize( chart.update );

   return chart;
   });
</script>

